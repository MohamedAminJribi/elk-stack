# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches:
      - master
 
jobs: 
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code from your repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Log in to Azure using Azure Login Action
    - name: Azure Login
      uses: azure/login@v1.6.1
      with:
        creds: ${{ secrets.AZ_CREDENTIALS }}

    # Step 3: Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Step 4: Set up Helm
    - name: Setup Helm
      uses: azure/setup-helm@v3

    # Step 5: Run Terraform to create resources in Azure
    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Add Elastic Helm repo
      run: |
        helm repo add elastic https://helm.elastic.co
        helm repo update
        
    - name: Set up Kubernetes Context for AKS
      uses: azure/aks-set-context@v2
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
       resource-group: example-resources  
       cluster-name: example-aks1
       
    - name: Update Dependencies for Elasticsearch
      run: |
        cd elk-stack/elasticsearch
        helm dependency update

    - name: Install Elasticsearch
      run: |
        cd elk-stack/elasticsearch
        helm install elasticsearch ./ 
        
    - name: Wait for Elasticsearch Pods to be Ready
      run: kubectl wait --for=condition=ready pod -l app=elasticsearch --timeout=300s


    - name: Update Dependencies for Kibana
      run: |
        cd elk-stack/kibana
        helm dependency update

    - name: Install Kibana
      run: |
        cd elk-stack/kibana
        helm install kibana ./ 
    - name: Retrieve Elasticsearch External IP
      run: |
       ELASTICSEARCH_IP=$(kubectl get service elasticsearch -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
       echo "Elasticsearch External IP: $ELASTICSEARCH_IP"
       echo "ELASTICSEARCH_IP=$ELASTICSEARCH_IP" >> $GITHUB_ENV

    - name: Update Logstash Configuration with Elasticsearch IP
      run: |
        cd elk-stack/logstash
        sed -i "22s/.*/  hosts: ['${{ env.ELASTICSEARCH_IP }}:9200']/" values.yaml
        sed -i "46s/.*/  hosts: ['${{ env.ELASTICSEARCH_IP }}:9200']/" values.yaml

        
    - name: Update Dependencies for Logstash
      run: |
        cd elk-stack/logstash
        helm dependency update

    - name: Install Logstash
      run: |
        cd elk-stack/logstash
        helm install logstash ./ 

   
