# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      # Step 2: Set up Terraform (if you're using Terraform for infrastructure)
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0  # Specify the Terraform version to use

      # Step 4: Set up Helm (if you're using Helm charts for ELK deployment)
      - name: Setup Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.0  # Specify the Helm version

      # Step 5: Deploy the ELK Stack (Customize this step based on your deployment needs)
      - name: Deploy ELK Stack
        run: |
          helm upgrade --install elasticsearch ./elasticsearch
          helm upgrade --install logstash ./logstash
          helm upgrade --install kibana ./kibana
      
      # Step 6: Deploy to Azure (Optional: If you're deploying on Azure using Terraform)
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_CREDENTIALS }}  # Add Azure credentials to GitHub Secrets

      - name: Deploy to Azure
        run: |
          terraform init
          terraform apply -auto-approve

