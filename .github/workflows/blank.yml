 
name: CI

on:
    workflow_dispatch:

 
jobs: 
  deploy:
    runs-on: ubuntu-latest

    steps:
    #  Checkout code from your repository
    - name: Checkout code
      uses: actions/checkout@v2

    #  Log in to Azure using Azure Login Action
    - name: Azure Login
      uses: azure/login@v1.6.1
      with:
        creds: ${{ secrets.AZ_CREDENTIALS }}

    #  Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    #  Set up Helm
    - name: Setup Helm
      uses: azure/setup-helm@v3

    #  Run Terraform to create resources in Azure
    - name: Terraform Init
      # env:
      #     TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      # if: github.ref == 'refs/heads/main'
      # env:
      #     TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: terraform apply -auto-approve

    - name: Add Elastic Helm repo
      run: |
        helm repo add elastic https://helm.elastic.co
        helm repo update
        
    - name: Set up Kubernetes Context for AKS
      uses: azure/aks-set-context@v2
      with:
       creds: ${{ secrets.AZURE_CREDENTIALS }}
       resource-group: example-resources  
       cluster-name: example-aks1
       
    - name: Update Dependencies for Elasticsearch
      run: |
        cd elk-stack/elasticsearch
        helm dependency update

    - name: Install Elasticsearch
      run: |
        cd elk-stack/elasticsearch
        helm install elasticsearch ./ 
        
    # - name: Wait for Elasticsearch Pods to be Ready
    #   run: kubectl wait --for=condition=ready pod -l app=elasticsearch-master-0 --timeout=300s
    
    - name: Wait for Elasticsearch to be Ready
      run: sleep 340


    - name: Update Dependencies for Kibana
      run: |
        cd elk-stack/kibana
        helm dependency update

    - name: Install Kibana
      run: |
        cd elk-stack/kibana
        helm install kibana ./ 
        
    - name: Retrieve Elasticsearch External IP
      run: |
          ELASTICSEARCH_IP=$(kubectl get service elasticsearch-master -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "Elasticsearch External IP: $ELASTICSEARCH_IP"
          echo "ELASTICSEARCH_IP=$ELASTICSEARCH_IP" >> $GITHUB_ENV
          
    

    - name: Update Logstash Configuration with Elasticsearch IP
      run: |
          cd elk-stack/logstash
          # Update line 22 with the new IP
          sed -i "s|xpack.monitoring.elasticsearch.hosts: \[.*\]|xpack.monitoring.elasticsearch.hosts: [ \"https://${{ env.ELASTICSEARCH_IP }}:9200\" ]|" values.yaml
          # Update line 46 with the new IP
          sed -i "s|hosts => \[.*\]|hosts => [\"https://${{ env.ELASTICSEARCH_IP }}:9200\"]|" values.yaml

        
    - name: Update Dependencies for Logstash
      run: |
        cd elk-stack/logstash
        helm dependency update

    - name: Install Logstash
      run: |
        cd elk-stack/logstash
        helm install logstash ./
       
    - name: Display Elasticsearch External IP
      run: | 
        echo "The External IP address of elasticsearch is: ${{ env.ELASTICSEARCH_IP }}"
        
    - name: Wait for Elasticsearch to be Ready
      run: sleep 60   
      
    - name: Retrieve Kibana External IP
      run: |
          KIBANA_IP=$(kubectl get service kibana-kibana  -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "Kibana External IP: $KIBANA_IP"
          echo "KIBANA_IP=$KIBANA_IP" >> $GITHUB_ENV

    - name: Display Kibana External IP
      run: |
          echo "The External IP address of Kibana is: ${{ env.KIBANA_IP }}"
      
    #TO GET EXTERNAL-IP OF LOGSTASH AND USE IT IN THE DEAMONSET OF FILEBEAT :    
    - name: Retrieve Logstash External IP
      run: |
          LOGSTASH_IP=$(kubectl get service logstash -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "Logstash External IP: $LOGSTASH_IP"
          echo "LOGSTASH_IP=$LOGSTASH_IP" >> $GITHUB_ENV
    
    - name: Display Logstash External IP
      run: |
         echo "The External IP address of Logstash is: ${{ env.LOGSTASH_IP }}"


   
